; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
name = "ESP32 Pulse Scaler"
description = "Calibrate a pulse flow meter to output the correct amount of pulses"
default_envs = esp32-c3-dev

[common]
firmware_version = 1.0.0
lib_deps = 
    ArduinoJson@^7.0.4
    fmtlib/fmt@^8.1.1        ; For string formatting

[env]
framework = arduino
lib_ldf_mode = chain+
; check_tool = cppcheck
; check_flags = cppcheck: --enable=warning,performance,portability --force --inconclusive
board_build.filesystem = littlefs
monitor_speed = 115200
upload_speed = 2000000
build_flags = 
    -D FIRMWARE_VERSION=\"${common.FIRMWARE_VERSION}\"
;extra_scripts = pre:pre_upload.py
board_build.partitions = partitions.csv
lib_deps =
	${common.lib_deps}
    EEPROM
    me-no-dev/AsyncTCP@^1.1.1
    https://github.com/khoih-prog/ESPAsyncDNSServer
    https://github.com/khoih-prog/ESPAsyncWebServer.git
    https://github.com/khoih-prog/ESPAsync_WiFiManager
    NTPClient
    https://github.com/chrisjoyce911/esp32FOTA.git#master    ; For OTA updates

[env:esp32-c3-dev]
platform = espressif32
board = esp32-c3-devkitm-1
build_type = debug
monitor_filters = esp32_exception_decoder
build_flags = 
    ${env.build_flags}
    -Og                       ; Optimize for debugging
    -DENABLE_ASSERTIONS       ; Enable assertions
    -Wl,-Map,output.map
    -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG

[env:esp32-c3-release]
platform = espressif32
board = esp32-c3-devkitm-1
build_flags = 
    ${env.build_flags}
    -Os
    -DRELEASE_BUILD
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
build_type = release
monitor_filters =

[env:native]
platform = native

[env:lolin_s2_mini]
platform = espressif32
board = lolin_s2_mini